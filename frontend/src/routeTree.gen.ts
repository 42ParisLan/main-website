/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as SplatRouteImport } from './routes/$'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TournamentIndexRouteImport } from './routes/tournament/index'
import { Route as RegisterIndexRouteImport } from './routes/register/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as AuthCallbackIndexRouteImport } from './routes/auth/callback/index'
import { Route as AdminVoteIndexRouteImport } from './routes/admin/vote/index'
import { Route as AdminUsersIndexRouteImport } from './routes/admin/users/index'
import { Route as AdminTeamsIndexRouteImport } from './routes/admin/teams/index'
import { Route as AdminAdminsIndexRouteImport } from './routes/admin/admins/index'

const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TournamentIndexRoute = TournamentIndexRouteImport.update({
  id: '/tournament/',
  path: '/tournament/',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterIndexRoute = RegisterIndexRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)
const AuthCallbackIndexRoute = AuthCallbackIndexRouteImport.update({
  id: '/auth/callback/',
  path: '/auth/callback/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminVoteIndexRoute = AdminVoteIndexRouteImport.update({
  id: '/vote/',
  path: '/vote/',
  getParentRoute: () => AdminRoute,
} as any)
const AdminUsersIndexRoute = AdminUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AdminRoute,
} as any)
const AdminTeamsIndexRoute = AdminTeamsIndexRouteImport.update({
  id: '/teams/',
  path: '/teams/',
  getParentRoute: () => AdminRoute,
} as any)
const AdminAdminsIndexRoute = AdminAdminsIndexRouteImport.update({
  id: '/admins/',
  path: '/admins/',
  getParentRoute: () => AdminRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/': typeof AdminIndexRoute
  '/register': typeof RegisterIndexRoute
  '/tournament': typeof TournamentIndexRoute
  '/admin/admins': typeof AdminAdminsIndexRoute
  '/admin/teams': typeof AdminTeamsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/admin/vote': typeof AdminVoteIndexRoute
  '/auth/callback': typeof AuthCallbackIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/admin': typeof AdminIndexRoute
  '/register': typeof RegisterIndexRoute
  '/tournament': typeof TournamentIndexRoute
  '/admin/admins': typeof AdminAdminsIndexRoute
  '/admin/teams': typeof AdminTeamsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/admin/vote': typeof AdminVoteIndexRoute
  '/auth/callback': typeof AuthCallbackIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/': typeof AdminIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/tournament/': typeof TournamentIndexRoute
  '/admin/admins/': typeof AdminAdminsIndexRoute
  '/admin/teams/': typeof AdminTeamsIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
  '/admin/vote/': typeof AdminVoteIndexRoute
  '/auth/callback/': typeof AuthCallbackIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$'
    | '/admin'
    | '/admin/'
    | '/register'
    | '/tournament'
    | '/admin/admins'
    | '/admin/teams'
    | '/admin/users'
    | '/admin/vote'
    | '/auth/callback'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$'
    | '/admin'
    | '/register'
    | '/tournament'
    | '/admin/admins'
    | '/admin/teams'
    | '/admin/users'
    | '/admin/vote'
    | '/auth/callback'
  id:
    | '__root__'
    | '/'
    | '/$'
    | '/admin'
    | '/admin/'
    | '/register/'
    | '/tournament/'
    | '/admin/admins/'
    | '/admin/teams/'
    | '/admin/users/'
    | '/admin/vote/'
    | '/auth/callback/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  AdminRoute: typeof AdminRouteWithChildren
  RegisterIndexRoute: typeof RegisterIndexRoute
  TournamentIndexRoute: typeof TournamentIndexRoute
  AuthCallbackIndexRoute: typeof AuthCallbackIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tournament/': {
      id: '/tournament/'
      path: '/tournament'
      fullPath: '/tournament'
      preLoaderRoute: typeof TournamentIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/auth/callback/': {
      id: '/auth/callback/'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/vote/': {
      id: '/admin/vote/'
      path: '/vote'
      fullPath: '/admin/vote'
      preLoaderRoute: typeof AdminVoteIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/teams/': {
      id: '/admin/teams/'
      path: '/teams'
      fullPath: '/admin/teams'
      preLoaderRoute: typeof AdminTeamsIndexRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/admins/': {
      id: '/admin/admins/'
      path: '/admins'
      fullPath: '/admin/admins'
      preLoaderRoute: typeof AdminAdminsIndexRouteImport
      parentRoute: typeof AdminRoute
    }
  }
}

interface AdminRouteChildren {
  AdminIndexRoute: typeof AdminIndexRoute
  AdminAdminsIndexRoute: typeof AdminAdminsIndexRoute
  AdminTeamsIndexRoute: typeof AdminTeamsIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
  AdminVoteIndexRoute: typeof AdminVoteIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminIndexRoute: AdminIndexRoute,
  AdminAdminsIndexRoute: AdminAdminsIndexRoute,
  AdminTeamsIndexRoute: AdminTeamsIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
  AdminVoteIndexRoute: AdminVoteIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  AdminRoute: AdminRouteWithChildren,
  RegisterIndexRoute: RegisterIndexRoute,
  TournamentIndexRoute: TournamentIndexRoute,
  AuthCallbackIndexRoute: AuthCallbackIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
