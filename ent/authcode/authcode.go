// Code generated by ent, DO NOT EDIT.

package authcode

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the authcode type in the database.
	Label = "auth_code"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAuthRequestID holds the string denoting the auth_request_id field in the database.
	FieldAuthRequestID = "auth_request_id"
	// FieldExpiration holds the string denoting the expiration field in the database.
	FieldExpiration = "expiration"
	// Table holds the table name of the authcode in the database.
	Table = "auth_codes"
)

// Columns holds all SQL columns for authcode fields.
var Columns = []string{
	FieldID,
	FieldAuthRequestID,
	FieldExpiration,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultExpiration holds the default value on creation for the "expiration" field.
	DefaultExpiration func() time.Time
)

// OrderOption defines the ordering options for the AuthCode queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByAuthRequestID orders the results by the auth_request_id field.
func ByAuthRequestID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAuthRequestID, opts...).ToFunc()
}

// ByExpiration orders the results by the expiration field.
func ByExpiration(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldExpiration, opts...).ToFunc()
}
