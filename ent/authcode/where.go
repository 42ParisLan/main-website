// Code generated by ent, DO NOT EDIT.

package authcode

import (
	"base-website/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldContainsFold(FieldID, id))
}

// AuthRequestID applies equality check predicate on the "auth_request_id" field. It's identical to AuthRequestIDEQ.
func AuthRequestID(v string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldEQ(FieldAuthRequestID, v))
}

// Expiration applies equality check predicate on the "expiration" field. It's identical to ExpirationEQ.
func Expiration(v time.Time) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldEQ(FieldExpiration, v))
}

// AuthRequestIDEQ applies the EQ predicate on the "auth_request_id" field.
func AuthRequestIDEQ(v string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldEQ(FieldAuthRequestID, v))
}

// AuthRequestIDNEQ applies the NEQ predicate on the "auth_request_id" field.
func AuthRequestIDNEQ(v string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldNEQ(FieldAuthRequestID, v))
}

// AuthRequestIDIn applies the In predicate on the "auth_request_id" field.
func AuthRequestIDIn(vs ...string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldIn(FieldAuthRequestID, vs...))
}

// AuthRequestIDNotIn applies the NotIn predicate on the "auth_request_id" field.
func AuthRequestIDNotIn(vs ...string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldNotIn(FieldAuthRequestID, vs...))
}

// AuthRequestIDGT applies the GT predicate on the "auth_request_id" field.
func AuthRequestIDGT(v string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldGT(FieldAuthRequestID, v))
}

// AuthRequestIDGTE applies the GTE predicate on the "auth_request_id" field.
func AuthRequestIDGTE(v string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldGTE(FieldAuthRequestID, v))
}

// AuthRequestIDLT applies the LT predicate on the "auth_request_id" field.
func AuthRequestIDLT(v string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldLT(FieldAuthRequestID, v))
}

// AuthRequestIDLTE applies the LTE predicate on the "auth_request_id" field.
func AuthRequestIDLTE(v string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldLTE(FieldAuthRequestID, v))
}

// AuthRequestIDContains applies the Contains predicate on the "auth_request_id" field.
func AuthRequestIDContains(v string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldContains(FieldAuthRequestID, v))
}

// AuthRequestIDHasPrefix applies the HasPrefix predicate on the "auth_request_id" field.
func AuthRequestIDHasPrefix(v string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldHasPrefix(FieldAuthRequestID, v))
}

// AuthRequestIDHasSuffix applies the HasSuffix predicate on the "auth_request_id" field.
func AuthRequestIDHasSuffix(v string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldHasSuffix(FieldAuthRequestID, v))
}

// AuthRequestIDEqualFold applies the EqualFold predicate on the "auth_request_id" field.
func AuthRequestIDEqualFold(v string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldEqualFold(FieldAuthRequestID, v))
}

// AuthRequestIDContainsFold applies the ContainsFold predicate on the "auth_request_id" field.
func AuthRequestIDContainsFold(v string) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldContainsFold(FieldAuthRequestID, v))
}

// ExpirationEQ applies the EQ predicate on the "expiration" field.
func ExpirationEQ(v time.Time) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldEQ(FieldExpiration, v))
}

// ExpirationNEQ applies the NEQ predicate on the "expiration" field.
func ExpirationNEQ(v time.Time) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldNEQ(FieldExpiration, v))
}

// ExpirationIn applies the In predicate on the "expiration" field.
func ExpirationIn(vs ...time.Time) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldIn(FieldExpiration, vs...))
}

// ExpirationNotIn applies the NotIn predicate on the "expiration" field.
func ExpirationNotIn(vs ...time.Time) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldNotIn(FieldExpiration, vs...))
}

// ExpirationGT applies the GT predicate on the "expiration" field.
func ExpirationGT(v time.Time) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldGT(FieldExpiration, v))
}

// ExpirationGTE applies the GTE predicate on the "expiration" field.
func ExpirationGTE(v time.Time) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldGTE(FieldExpiration, v))
}

// ExpirationLT applies the LT predicate on the "expiration" field.
func ExpirationLT(v time.Time) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldLT(FieldExpiration, v))
}

// ExpirationLTE applies the LTE predicate on the "expiration" field.
func ExpirationLTE(v time.Time) predicate.AuthCode {
	return predicate.AuthCode(sql.FieldLTE(FieldExpiration, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AuthCode) predicate.AuthCode {
	return predicate.AuthCode(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AuthCode) predicate.AuthCode {
	return predicate.AuthCode(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AuthCode) predicate.AuthCode {
	return predicate.AuthCode(sql.NotPredicates(p))
}
