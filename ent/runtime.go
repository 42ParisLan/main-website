// Code generated by ent, DO NOT EDIT.

package ent

import (
	"base-website/ent/authcode"
	"base-website/ent/schema"
	"base-website/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	authcodeFields := schema.AuthCode{}.Fields()
	_ = authcodeFields
	// authcodeDescExpiration is the schema descriptor for expiration field.
	authcodeDescExpiration := authcodeFields[2].Descriptor()
	// authcode.DefaultExpiration holds the default value on creation for the expiration field.
	authcode.DefaultExpiration = authcodeDescExpiration.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[5].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[6].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescRoles is the schema descriptor for roles field.
	userDescRoles := userFields[11].Descriptor()
	// user.DefaultRoles holds the default value on creation for the roles field.
	user.DefaultRoles = userDescRoles.Default.([]string)
}
