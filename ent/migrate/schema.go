// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AuthCodesColumns holds the columns for the "auth_codes" table.
	AuthCodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "auth_request_id", Type: field.TypeString},
		{Name: "expiration", Type: field.TypeTime},
	}
	// AuthCodesTable holds the schema information for the "auth_codes" table.
	AuthCodesTable = &schema.Table{
		Name:       "auth_codes",
		Columns:    AuthCodesColumns,
		PrimaryKey: []*schema.Column{AuthCodesColumns[0]},
	}
	// AuthRefreshTokensColumns holds the columns for the "auth_refresh_tokens" table.
	AuthRefreshTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "token", Type: field.TypeString},
		{Name: "subject", Type: field.TypeString},
		{Name: "auth_time", Type: field.TypeTime},
		{Name: "amr", Type: field.TypeJSON},
		{Name: "audience", Type: field.TypeJSON},
		{Name: "user_id", Type: field.TypeString},
		{Name: "application_id", Type: field.TypeString},
		{Name: "expiration", Type: field.TypeTime},
		{Name: "scopes", Type: field.TypeJSON},
	}
	// AuthRefreshTokensTable holds the schema information for the "auth_refresh_tokens" table.
	AuthRefreshTokensTable = &schema.Table{
		Name:       "auth_refresh_tokens",
		Columns:    AuthRefreshTokensColumns,
		PrimaryKey: []*schema.Column{AuthRefreshTokensColumns[0]},
	}
	// AuthTokensColumns holds the columns for the "auth_tokens" table.
	AuthTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "application_id", Type: field.TypeString},
		{Name: "subject", Type: field.TypeString},
		{Name: "refresh_token_id", Type: field.TypeString},
		{Name: "audience", Type: field.TypeJSON},
		{Name: "expiration", Type: field.TypeTime},
		{Name: "scopes", Type: field.TypeJSON},
	}
	// AuthTokensTable holds the schema information for the "auth_tokens" table.
	AuthTokensTable = &schema.Table{
		Name:       "auth_tokens",
		Columns:    AuthTokensColumns,
		PrimaryKey: []*schema.Column{AuthTokensColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "picture", Type: field.TypeString, Nullable: true},
		{Name: "kind", Type: field.TypeEnum, Enums: []string{"basic", "admin", "super-admin"}, Default: "basic"},
		{Name: "usual_full_name", Type: field.TypeString},
		{Name: "usual_first_name", Type: field.TypeString, Nullable: true},
		{Name: "roles", Type: field.TypeJSON},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AuthCodesTable,
		AuthRefreshTokensTable,
		AuthTokensTable,
		UsersTable,
	}
)

func init() {
}
